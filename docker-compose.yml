version: '3'


networks:
  dex-quantitative:
    driver:
      bridge

services:
  dev-haproxy:
    hostname: dex-haproxy
    #restart: always
    build:
      context: ./
      dockerfile: haproxy/Dockerfile
    environment:
      - RABBITMQ_DEFAULT_USER=dream 
      - RABBITMQ_DEFAULT_PASS=231510622abc
      - PATH=$PATH:/opt/rabbitmq/sbin:/usr/local/bin/:/bin
    ports:
      - 5670:5670
      - 35672:35672
      - 35674:35674
      - 9999:9999
      - 9527:9527
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - dex-quantitative

  # dev-mongo:
  #   hostname: dex-mongo
  #   restart: always
  #   image: mongo
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=231510622abc
  #   volumes:
  #     - ./mongo/db:/data/db
  #     - ./mongo/configdb:/data/configdb
  #   ports:
  #     - 27017:27017
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   networks:
  #     - dex-quantitative

  # dev-mongo-express:
  #   restart: always
  #   image: mongo-express
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=dex-mongo
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=231510622abc
  #   ports:
  #     - 8081:8081
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   networks:
  #     - dex-quantitative

  dev-mysql:
    hostname: dex-mysql
    restart: always
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=231510622abc
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    volumes:
      - ./mysql/datadir:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - dex-quantitative

  dev-phpmyadmin:
    hostname: dex-phpmyadmin
    restart: always
    image: phpmyadmin
    ports:
      - 8888:80
    environment:
      - PMA_ARBITRARY=1
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - dex-quantitative

  dev-show:
    hostname: dex-show
    #restart: always
    build:
      context: ./
      dockerfile: dex-show/Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./build:/opt/build
    extra_hosts:
      - host.docker.internal:host-gateway
    # depends_on:
    #   - dev-haproxy
    #   - dev-mysql
    networks:
      - dex-quantitative

  # dev-node-publish:
  #   hostname: dex-node-publish
  #   #restart: always
  #   build:
  #     context: ./
  #     dockerfile: dex-node-publish/Dockerfile
  #   volumes:
  #     - ./build:/opt/build
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - dev-haproxy
  #     - dev-mysql
  #   networks:
  #     - dex-quantitative

  # dev-node-consumer:
  #   hostname: dex-node-consumer
  #   #restart: always
  #   build:
  #     context: ./
  #     dockerfile: dex-node-consumer/Dockerfile
  #   volumes:
  #     - ./build:/opt/build
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - dev-haproxy
  #     - dev-mysql
  #   networks:
  #     - dex-quantitative

  dev-node-consumer-node-zero:
    hostname: dex-node-consumer-node-zero
    #restart: always
    build:
      context: ./
      dockerfile: dex-node-consumer/Dockerfile
    volumes:
      - ./build:/opt/build
    extra_hosts:
      - host.docker.internal:host-gateway
    # depends_on:
    #   - dev-haproxy
    #   - dev-mysql
    networks:
      - dex-quantitative

  dev-node-consumer-node-one:
    hostname: dex-node-consumer-node-one
    #restart: always
    build:
      context: ./
      dockerfile: dex-node-consumer/Dockerfile
    volumes:
      - ./build:/opt/build
    extra_hosts:
      - host.docker.internal:host-gateway
    # depends_on:
    #   - dev-haproxy
    #   - dev-mysql
    networks:
      - dex-quantitative

  dev-node-consumer-node-two:
    hostname: dex-node-consumer-node-two
    #restart: always
    build:
      context: ./
      dockerfile: dex-node-consumer/Dockerfile
    volumes:
      - ./build:/opt/build
    extra_hosts:
      - host.docker.internal:host-gateway
    # depends_on:
    #   - dev-haproxy
    #   - dev-mysql
    networks:
      - dex-quantitative

  # dev-node-consumer-node-three:
  #   hostname: dex-node-consumer-node-three
  #   #restart: always
  #   build:
  #     context: ./
  #     dockerfile: dex-node-consumer-node-three/Dockerfile
  #   volumes:
  #     - ./build:/opt/build
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - dev-haproxy
  #     - dev-mysql
  #   networks:
  #     - dex-quantitative

  # dev-node-consumer-node-four:
  #   hostname: dex-node-consumer-node-four
  #   #restart: always
  #   build:
  #     context: ./
  #     dockerfile: dex-node-consumer-node-four/Dockerfile
  #   volumes:
  #     - ./build:/opt/build
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - dev-haproxy
  #     - dev-mysql
  #   networks:
  #     - dex-quantitative

  # dev-node-consumer-node-five:
  #   hostname: dex-node-consumer-node-five
  #   #restart: always
  #   build:
  #     context: ./
  #     dockerfile: dex-node-consumer-node-five/Dockerfile
  #   volumes:
  #     - ./build:/opt/build
  #   extra_hosts:
  #     - host.docker.internal:host-gateway
  #   depends_on:
  #     - dev-haproxy
  #     - dev-mysql
  #   networks:
  #     - dex-quantitative